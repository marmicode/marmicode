name: Test & Deploy

on:
  - push

x-steps:

  cache-node-modules: &cache-node-modules
    uses: actions/cache@v2
    with:
      path: node_modules
      key: node-modules-${{ hashFiles('yarn.lock') }}-3

  checkout: &checkout
    uses: actions/checkout@v2
    with:
      # Checkout tags so we can use 'affected:* --base=latest'
      fetch-depth: 0

  setup-node: &setup-node
    uses: actions/setup-node@v1
    with:
      node-version: '14.x'

  slack-notify-failure: &slack-notify-failure
    name: Notify on failure
    uses: pioug/le-slack-message@v1.0.0
    if: failure()
    with:
      JOB: ${{ toJson(job) }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  upload-dist-on-failure: &upload-dist-on-failure
    name: Upload dist (Cypress videos / build output etc...) on failure
    uses: actions/upload-artifact@v2
    if: failure()
    with:
      name: dist
      path: dist

  yarn-install: &yarn-install
    name: Install
    run: yarn install --frozen-lockfile

env:
  CYPRESS_CACHE_FOLDER: node_modules/.cache/cypress

jobs:


  e2e:
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      # The full token is used by `percy-poller`.
      # You can find it here https://percy.io/api/v1/tokens after signing-in to Percy as an admin.
      PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}
    steps:
      - *checkout
      - *setup-node
      - *cache-node-modules
      - *yarn-install
      - name: Increase file watchers to avoid storybook warnings
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: E2E
        run: yarn affected:e2e --base=latest --head=HEAD --headless --browser=chrome
      - name: Check Percy Review
        run: yarn percy-review-approved
      - *upload-dist-on-failure
      - *slack-notify-failure

  lint:
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-node
      - *cache-node-modules
      - *yarn-install
      - name: Lint
        run: yarn affected:lint --base=latest --head=HEAD
      - *slack-notify-failure

  test:
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-node
      - *cache-node-modules
      - *yarn-install
      - name: Test
        run: yarn affected:test --base=latest --head=HEAD
      - *slack-notify-failure

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/tags/latest'
    needs:
      - e2e
      - lint
      - test
    steps:
      - *checkout
      - *setup-node
      - *cache-node-modules
      - *yarn-install
      - name: Get project name
        id: project
        run: |
          PROJECT=$([ $GITHUB_REF == 'refs/tags/latest' ] && echo marmicode || echo marmicode-next)
          echo "::set-output name=project::$PROJECT"
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT: ${{ steps.project.outputs.project }}
        run: tools/deploy.sh $PROJECT
      - *upload-dist-on-failure
      - *slack-notify-failure
