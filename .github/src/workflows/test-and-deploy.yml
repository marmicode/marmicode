name: Test & Deploy

on:
  repository_dispatch:
    types: [contentful-publish]
  pull_request: {}
  push: {}
  # Allow manual trigger.
  workflow_dispatch: {}

x-steps:
  cache: &cache
    uses: actions/cache@v2
    with:
      path: |
        .yarn-cache
        node_modules/.cache/cypress
      key: yarn-cache

  checkout: &checkout
    uses: actions/checkout@v2
    with:
      # Checkout tags so we can use 'affected:* --base=deployed/marmicode-next'
      fetch-depth: 0

  push: &push
    name: Push changes
    uses: ad-m/github-push-action@master
    with:
      github_token: ${{ secrets.GITHUB_TOKEN }}
      branch: ${{ github.ref }}
      force: true
      tags: true

  setup-node: &setup-node
    uses: actions/setup-node@v1
    with:
      node-version: '14.x'

  slack-notify-failure: &slack-notify-failure
    name: Notify on failure
    uses: pioug/le-slack-message@v1.0.0
    if: failure()
    with:
      JOB: ${{ toJson(job) }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  upload-dist-on-failure: &upload-dist-on-failure
    name: Upload dist (Cypress videos / build output etc...) on failure
    uses: actions/upload-artifact@v2
    if: failure()
    with:
      name: dist
      path: dist

  yarn-install: &yarn-install
    name: Install
    run: yarn install --immutable

env:
  CYPRESS_CACHE_FOLDER: node_modules/.cache/cypress
  YARN_CACHE_FOLDER: .yarn-cache

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      # The full token is used by `percy-poller`.
      # You can find it here https://percy.io/api/v1/tokens after signing-in to Percy as an admin.
      PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Increase file watchers to avoid storybook warnings
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        # Check if we should run e2e tests & percy review.
        # If no tests are ran or if we don't take any snapshots,
        # percy will fail.
      - name: Should run E2E?
        id: should-run-e2e
        run: |
          # `grep -c` fails if list is empty (no e2e tests to run)
          SHOULD_RUN_E2E=$(yarn nx print-affected --base=deployed/marmicode-next \
            | yarn json projects | grep -c e2e && echo true || echo false)
          echo "::set-output name=should-run-e2e::$SHOULD_RUN_E2E"
      - name: E2E
        if: steps.should-run-e2e.outputs.should-run-e2e != false
        run: $(npm bin)/percy exec -- $(npm bin)/nx run-many --all --target=e2e --base=deployed/marmicode-next --headless --browser=chrome
      - name: Check Percy Review
        if: steps.should-run-e2e.outputs.should-run-e2e != false
        run: yarn percy-review-approved
      - *upload-dist-on-failure
      - *slack-notify-failure

  lint:
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Lint
        run: yarn affected:lint --base=deployed/marmicode-next
      - *slack-notify-failure

  test:
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Test
        run: yarn affected:test --base=deployed/marmicode-next
      - *slack-notify-failure

  deploy-marmicode-next:
    name: ðŸš€ Marmicode Next
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: Marmicode Next
      url: https://marmicode-next.web.app
    needs:
      - e2e
      - lint
      - test
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: tools/deploy.sh marmicode-next
      - name: Tag deployed/marmicode-next
        run: git tag -f deployed/marmicode-next
      - *push
      - *upload-dist-on-failure
      - *slack-notify-failure

  deploy-marmicode:
    name: ðŸš€ Marmicode
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: Marmicode
      url: https://marmicode.io
    needs:
      - e2e
      - lint
      - test
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: tools/deploy.sh marmicode
      - name: Tag deployed/marmicode
        run: git tag -f deployed/marmicode
      - *push
      - *upload-dist-on-failure
      - *slack-notify-failure
