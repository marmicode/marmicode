name: Test & Deploy

concurrency: ci-${{ github.ref }}

on:
  pull_request: {}
  push:
    branches:
      - main
  # Allow manual trigger.
  workflow_dispatch: {}

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 4

x-steps:
  cache: &cache
    uses: actions/cache@v4
    with:
      path: |
        ~/.cache/Cypress
        .angular
        libs/*/.angular
        node_modules/.cache
      # Always update the cache.
      # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
      key: cache-${{ github.run_id }}
      restore-keys: |
        cache

  checkout: &checkout
    uses: actions/checkout@v4
    with:
      # Checkout tags so we can use 'affected:* --base=deployed/marmicode-next'
      fetch-depth: 0

  push: &push
    name: Push changes
    uses: ad-m/github-push-action@master
    with:
      github_token: ${{ secrets.GITHUB_TOKEN }}
      branch: ${{ github.ref }}
      force: true
      tags: true

  setup-node: &setup-node
    uses: actions/setup-node@v4
    with:
      node-version: '18'

  upload-dist-on-failure: &upload-dist-on-failure
    name: Upload dist (Cypress videos / build output etc...) on failure
    uses: actions/upload-artifact@v4
    if: failure()
    with:
      name: dist
      path: dist

  install-bun: &install-bun
    uses: oven-sh/setup-bun@v1
    with:
      bun-version: latest

  bun-install: &bun-install
    name: Install
    run: bun install

x-deploy-base: &deploy-base
  if: github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest
  needs:
    - build-test-lint

x-percy-env: &percy-env
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  # The full token is used by `percy-poller`.
  # You can find it here https://percy.io/api/v1/tokens after signing-in to Percy as an admin.
  PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}

jobs:
  build:
    name: ðŸ“¦ Build
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - run: bunx nx-cloud start-ci-run

      - name: Build
        run: bunx nx affected --target=prerender --configuration next --base=deployed/marmicode-next

      - *upload-dist-on-failure

  test:
    name: âœ… Test
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - run: bunx nx-cloud start-ci-run

      - name: Test
        run: bunx nx affected --target=test --base=deployed/marmicode-next

      - *upload-dist-on-failure

  lint:
    name: ðŸš¨ Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - run: bunx nx-cloud start-ci-run

      - name: Lint
        run: bunx nx affected --target=lint --base=deployed/marmicode-next

      - *upload-dist-on-failure

  component-test:
    name: âœ… Component Test
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - run: bunx nx-cloud start-ci-run

      - name: Component Test
        run: bunx nx affected --target=component-test --parallel 1 --base=deployed/marmicode-next

      - *upload-dist-on-failure

  e2e:
    name: âœ… E2E
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - run: bunx nx-cloud start-ci-run

      - name: E2E
        run: bunx nx affected --target=e2e --parallel 1 --base=deployed/marmicode-next

      - *upload-dist-on-failure

  check-sync:
    name: ðŸ”„ Check Sync
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - name: Check Sync No Changes
        run: bunx nx affected --target=sync --base=deployed/marmicode-next && git diff --exit-code

      - *upload-dist-on-failure

  nx-agents:
    name: ðŸ¤– Agents
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        agent: [1, 2, 3, 4]
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - name: Start Nx Agent ${{ matrix.agent }}
        run: bunx nx-cloud start-agent

      - *upload-dist-on-failure

  check-snapshots:
    name: ðŸ“¸ Check Snapshots
    runs-on: ubuntu-latest
    env:
      <<: *percy-env
      NX_CLOUD_DISTRIBUTED_EXECUTION: false
    needs:
      - component-test
      - e2e

    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - name: Upload Affected Percy Snapshots
        if: github.ref != 'refs/heads/main'
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx percy exec --partial -- bun upload-affected-percy-snapshots

      - name: Upload All Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: bunx percy exec -- bun nx run-many --target=upload-percy-snapshots

      # Check Percy Review on main branch only.
      # On other branches, we'll let Percy status check do the job.
      - name: Check Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: PERCY_TOKEN=$PERCY_FULL_TOKEN bunx percy build:wait --project d53cdff6/marmicode --fail-on-changes

      - *upload-dist-on-failure

  deploy-marmicode-next:
    <<: *deploy-base
    name: ðŸš€ Marmicode Next
    environment:
      name: Marmicode Next
      url: https://marmicode-next.web.app
    needs:
      - build
      - lint
      - test
      - component-test
      - e2e
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx nx run marmicode:deploy:next

      - name: Tag deployed/marmicode-next
        run: git tag -f deployed/marmicode-next

      - *push
      - *upload-dist-on-failure

  deploy-marmicode:
    <<: *deploy-base
    name: ðŸš€ Marmicode
    environment:
      name: Marmicode
      url: https://marmicode.io
    needs:
      - build
      - lint
      - test
      - component-test
      - e2e
      - check-snapshots
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *install-bun
      - *bun-install

      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx nx run marmicode:deploy:production

      - name: Tag deployed/marmicode
        run: git tag -f deployed/marmicode

      - *push
      - *upload-dist-on-failure
