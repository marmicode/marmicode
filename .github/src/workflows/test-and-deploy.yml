name: Test & Deploy

concurrency: ci-${{ github.ref }}

on:
  repository_dispatch:
    types: [contentful-publish]
  pull_request: {}
  push:
    branches:
      - main
  # Allow manual trigger.
  workflow_dispatch: {}

x-steps:
  cache: &cache
    uses: actions/cache@v2
    with:
      path: |
        .angular
        libs/*/.angular
        node_modules/.cache
      key: cache

  checkout: &checkout
    uses: actions/checkout@v2
    with:
      # Checkout tags so we can use 'affected:* --base=deployed/marmicode-next'
      fetch-depth: 0

  push: &push
    name: Push changes
    uses: ad-m/github-push-action@master
    with:
      github_token: ${{ secrets.GITHUB_TOKEN }}
      branch: ${{ github.ref }}
      force: true
      tags: true

  setup-node: &setup-node
    uses: actions/setup-node@v3
    with:
      cache: yarn
      node-version: '18'

  slack-notify-failure: &slack-notify-failure
    name: Notify on failure
    uses: pioug/le-slack-message@v1.0.0
    if: failure()
    with:
      JOB: ${{ toJson(job) }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  upload-dist-on-failure: &upload-dist-on-failure
    name: Upload dist (Cypress videos / build output etc...) on failure
    uses: actions/upload-artifact@v2
    if: failure()
    with:
      name: dist
      path: dist

  yarn-install: &yarn-install
    name: Install
    run: yarn install --immutable

x-deploy-base: &deploy-base
  if: github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest
  needs:
    - build
    - lint
    - test
    - component-test
    - e2e
    - percy

x-percy-env: &percy-env
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  # The full token is used by `percy-poller`.
  # You can find it here https://percy.io/api/v1/tokens after signing-in to Percy as an admin.
  PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}

env:
  CYPRESS_CACHE_FOLDER: node_modules/.cache/cypress

jobs:
  build:
    name: ðŸ“¦ Build
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install
      - name: Build
        run: yarn affected --target=prerender --configuration next --base=deployed/marmicode-next
      - *slack-notify-failure

  lint:
    name: ðŸ§¹ Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install
      - name: Lint
        run: yarn affected --target=lint --base=deployed/marmicode-next
      - *slack-notify-failure

  test:
    name: âœ… Test
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup-node
      - *cache
      - *yarn-install
      - name: Test
        run: yarn affected --target=test --base=deployed/marmicode-next
      - *slack-notify-failure

  component-test:
    name: âœ… Component Test
    runs-on: ubuntu-latest
    env: *percy-env
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install

      # Run all Component Tests on main branch.
      - name: All Component Tests
        if: github.ref == 'refs/heads/main'
        run: yarn percy exec --parallel -- yarn nx run-many --target=component-test --browser=chrome

      # Run affected Component Tests only on other branches.
      # Cf. https://docs.percy.io/docs/partial-builds
      - name: Affected Component Tests
        if: github.ref != 'refs/heads/main'
        run: yarn percy exec --parallel --partial -- yarn nx affected --target=component-test --browser=chrome --base=deployed/marmicode-next

      - *upload-dist-on-failure
      - *slack-notify-failure

  e2e:
    name: âœ… End-to-End
    runs-on: ubuntu-latest
    env: *percy-env
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install

      # Run all E2E on main branch.
      - name: All E2E
        if: github.ref == 'refs/heads/main'
        run: yarn percy exec --parallel -- yarn nx run-many --target=e2e --browser=chrome

      # Run affected E2E only on other branches.
      # Cf. https://docs.percy.io/docs/partial-builds
      - name: Affected E2E
        if: github.ref != 'refs/heads/main'
        run: yarn percy exec --parallel --partial -- yarn nx affected --target=e2e --browser=chrome --base=deployed/marmicode-next

      - *upload-dist-on-failure
      - *slack-notify-failure

  percy:
    name: ðŸ–¼ Finalize Percy
    runs-on: ubuntu-latest
    env: *percy-env
    needs:
      - component-test
      - e2e
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install

      - name: Add placeholder snapshot
        # Uploading placeholder snapshot of assets just in case no project is affected.
        # If nothing is affected, the snapshots will be empty and the Percy status will fail on PR.
        # We can't use percy upload as it starts another separate Percy build.
        run: yarn percy exec --parallel -- yarn ts-node tools/percy-upload-placeholder.ts

      - name: Finalize Percy parallel build
        run: yarn percy build:finalize

      # Check Percy Review on main branch only.
      # On other branches, we'll let Percy status check do the job.
      - name: Check Percy Review
        if: github.ref == 'refs/heads/main'
        run: PERCY_TOKEN=$PERCY_FULL_TOKEN yarn percy build:wait --project marmicode/marmicode --fail-on-changes

  deploy-marmicode-next:
    <<: *deploy-base
    name: ðŸš€ Marmicode Next
    environment:
      name: Marmicode Next
      url: https://marmicode-next.web.app
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: yarn nx run marmicode:deploy:next
      - name: Tag deployed/marmicode-next
        run: git tag -f deployed/marmicode-next
      - *push
      - *upload-dist-on-failure
      - *slack-notify-failure

  deploy-marmicode:
    <<: *deploy-base
    name: ðŸš€ Marmicode
    environment:
      name: Marmicode
      url: https://marmicode.io
    steps:
      - *checkout
      - *cache
      - *setup-node
      - *yarn-install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: yarn nx run marmicode:deploy:production
      - name: Tag deployed/marmicode
        run: git tag -f deployed/marmicode
      - *push
      - *upload-dist-on-failure
      - *slack-notify-failure
