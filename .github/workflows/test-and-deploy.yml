# DO NOT EDIT: This file was generated.

name: Test & Deploy
concurrency: ci-${{ github.ref }}
'on':
  pull_request: {}
  push:
    branches:
      - main
  workflow_dispatch: {}
env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 4
jobs:
  build:
    name: ðŸ“¦ Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - run: bunx nx-cloud start-ci-run
      - name: Build
        run: >-
          bunx nx affected --target=prerender --configuration next
          --base=deployed/marmicode-next
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  test:
    name: âœ… Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - run: bunx nx-cloud start-ci-run
      - name: Test
        run: bunx nx affected --target=test --base=deployed/marmicode-next
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  lint:
    name: ðŸš¨ Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - run: bunx nx-cloud start-ci-run
      - name: Lint
        run: bunx nx affected --target=lint --base=deployed/marmicode-next
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  component-test:
    name: âœ… Component Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - run: bunx nx-cloud start-ci-run
      - name: Component Test
        run: >-
          bunx nx affected --target=component-test --parallel 1
          --base=deployed/marmicode-next
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  e2e:
    name: âœ… E2E
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - run: bunx nx-cloud start-ci-run
      - name: E2E
        run: >-
          bunx nx affected --target=e2e --parallel 1
          --base=deployed/marmicode-next
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  check-sync:
    name: ðŸ”„ Check Sync
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Check Sync No Changes
        run: >-
          bunx nx affected --target=sync --base=deployed/marmicode-next && git
          diff --exit-code
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  nx-agents:
    name: ðŸ¤– Agents
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        agent:
          - 1
          - 2
          - 3
          - 4
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: bunx nx-cloud start-agent
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  nx-agents-stop:
    name: ðŸ¤– Agents Stop
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
      - component-test
      - e2e
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Stop Nx Agents
        run: bunx nx-cloud stop-all-agents
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  check-snapshots:
    name: ðŸ“¸ Check Snapshots
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}
      NX_CLOUD_DISTRIBUTED_EXECUTION: false
    needs:
      - component-test
      - e2e
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Upload Affected Percy Snapshots
        if: github.ref != 'refs/heads/main'
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx percy exec --partial -- bun upload-affected-percy-snapshots
      - name: Upload All Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: bunx percy exec -- bun nx run-many --target=upload-percy-snapshots
      - name: Check Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: >-
          PERCY_TOKEN=$PERCY_FULL_TOKEN bunx percy build:wait --project
          d53cdff6/marmicode --fail-on-changes
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  deploy-marmicode-next:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
      - component-test
      - e2e
    name: ðŸš€ Marmicode Next
    environment:
      name: Marmicode Next
      url: https://marmicode-next.web.app
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx nx run marmicode:deploy:next
      - name: Tag deployed/marmicode-next
        run: git tag -f deployed/marmicode-next
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
  deploy-marmicode:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
      - component-test
      - e2e
      - check-snapshots
    name: ðŸš€ Marmicode
    environment:
      name: Marmicode
      url: https://marmicode.io
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install
        run: bun install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
        run: bunx nx run marmicode:deploy:production
      - name: Tag deployed/marmicode
        run: git tag -f deployed/marmicode
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: dist
          path: dist
