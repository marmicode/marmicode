# DO NOT EDIT: This file was generated.

name: Test & Deploy
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
'on':
  pull_request: {}
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  test:
    name: âœ… Build, Test, Lint, Component Test, E2E
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
      - name: Install
        run: pnpm install
      - uses: nrwl/nx-set-shas@v4
      - run: pnpm nx-cloud start-ci-run --distribute-on="8 linux-large-js"
      - run: pnpm nx affected --target=build,test,lint,component-test,e2e
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: dist
          path: dist
  check-sync:
    name: ðŸ”„ Check Sync
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
      - name: Install
        run: pnpm install
      - uses: nrwl/nx-set-shas@v4
      - name: Check Sync No Changes
        run: pnpm nx affected --target=sync && git diff --exit-code
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: dist
          path: dist
  check-snapshots:
    name: ðŸ“¸ Check Snapshots
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      PERCY_FULL_TOKEN: ${{ secrets.PERCY_FULL_TOKEN }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
      - name: Install
        run: pnpm install
      - uses: nrwl/nx-set-shas@v4
      - name: Upload Affected Percy Snapshots
        if: github.ref != 'refs/heads/main'
        run: >-
          pnpm percy exec --partial -- pnpm upload-affected-percy-snapshots
          --no-agents
      - name: Upload All Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: >-
          pnpm percy exec -- pnpm nx run-many --target=upload-percy-snapshots
          --no-agents
      - name: Check Percy Snapshots
        if: github.ref == 'refs/heads/main'
        run: >-
          PERCY_TOKEN=$PERCY_FULL_TOKEN pnpm percy build:wait --project
          d53cdff6/marmicode --fail-on-changes
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: dist
          path: dist
  deploy-marmicode-next:
    runs-on: ubuntu-latest
    name: ðŸš€ Marmicode Next
    environment:
      name: Marmicode Next
      url: ${{ steps.deploy.outputs.url }}
    needs:
      - test
      - check-sync
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
      - name: Install
        run: pnpm install
      - name: Deploy
        id: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: >
          pnpm nx run marmicode:deploy:next --no-agents | tee /tmp/deploy-output

          hosting_url=$(cat /tmp/deploy-output | grep -o 'Hosting URL.*:
          https://[^[:space:]]*' | sed 's/.*: //')

          channel_url=$(cat /tmp/deploy-output | grep -o 'Channel URL.*:
          https://[^[:space:]]*' | sed 's/.*: //')

          echo "hosting_url: $hosting_url"

          echo "channel_url: $channel_url"

          echo "url=${channel_url:-$hosting_url}" >> $GITHUB_OUTPUT
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: dist
          path: dist
  deploy-marmicode:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: ðŸš€ Marmicode
    environment:
      name: Marmicode
      url: https://marmicode.io
    needs:
      - test
      - check-snapshots
      - check-sync
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            .angular
            libs/*/.angular
            node_modules/.cache
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
      - name: Install
        run: pnpm install
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: pnpm nx run marmicode:deploy:production --no-agents
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: dist
          path: dist
