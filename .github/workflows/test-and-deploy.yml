# DO NOT EDIT: This file was generated.

name: Test & Deploy
'on':
  - push
env:
  CYPRESS_CACHE_FOLDER: node_modules/.cache/cypress
jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}-3
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Increase file watchers to avoid storybook warnings
        run: >-
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
          && sudo sysctl -p
      - name: E2E
        run: >-
          yarn affected:e2e --base=latest --head=HEAD --headless
          --browser=chrome
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: dist
          path: dist
      - name: Notify on failure
        uses: pioug/le-slack-message@v1.0.0
        if: failure()
        with:
          JOB: ${{ toJson(job) }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}-3
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn affected:lint --base=latest --head=HEAD
      - name: Notify on failure
        uses: pioug/le-slack-message@v1.0.0
        if: failure()
        with:
          JOB: ${{ toJson(job) }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}-3
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Test
        run: yarn affected:test --base=latest --head=HEAD
      - name: Notify on failure
        uses: pioug/le-slack-message@v1.0.0
        if: failure()
        with:
          JOB: ${{ toJson(job) }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - e2e
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}-3
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Get project name
        id: project
        run: >
          PROJECT=$([ $GITHUB_REF == 'refs/tags/latest' ] && echo marmicode ||
          echo marmicode-next)

          echo "::set-output name=project::$PROJECT"
      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT: ${{ steps.project.outputs.project }}
        run: tools/deploy.sh $PROJECT
      - name: Upload dist (Cypress videos / build output etc...) on failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: dist
          path: dist
      - name: Notify on failure
        uses: pioug/le-slack-message@v1.0.0
        if: failure()
        with:
          JOB: ${{ toJson(job) }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
